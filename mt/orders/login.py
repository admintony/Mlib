import requests

# login 登录
# ip = "https://ssosv.sankuai.com/login"
# url = ip + "/api/auth/login?redirect=/"
# headers = {"Content-Type": "text/html; charset=utf-8"}
headers = {"Content-Type":"application/json;charset=UTF-8"}
ip = "https://ssosv.sankuai.com/qrcode/login"
params = {"uuid":"c542421133d94a69967c798349c8ae52",
         "service":"https://ssosv.sankuai.com/oauth2.0/callbackAuthorize?callbackTicket=7a4e4b286da3493498e424c7474f345d",
         "appkey":"com.sankuai.it.ead.citadel"}
# params = {"SID":"477010bf13*a48a680f66a3e62efb159","time":"1534249285","sign":"4518707844db873b1b06a7bb955e1133"}

# params = {"username": "yangjiao07", "password": "jiao.yang07",
#           "service": "https%3A%2F%2Fsso.sankuai.com%2Fproxy%3FclientService%3Dhttp%253A%252F%252Fmanager.qcs.test.sankuai.com%252Fapi%252Fauth%252Flogin%253Fredirect%253Dhttp%25253A%25252F%25252Fmanager.qcs.test.sankuai.com%25252Fsettle%25252FmanualChangeOrder%25252Flist.html",
#           "key": "", "appkey": "", "os": "MacIntel",
#           "screen": "1440x900", "isRemembered": "false",
#           # "key": "",
#           "timeout": "",
#           "lt": "LT-454532-qa1bm34jagLoFm6HIhWxaubWbnQjB4-ssosv.it", "callbackTicket": "",
#           "_eventId": "submit",
#           "execution": "9c6b9466-9d4d-46e3-883e-5753743291c6_ZXlKaGJHY2lPaUpJVXpVeE1pSjkuTTNaWWVHOVhVbkZsT1ZWVlZGSm5hSEpsV0VrNVFXNHJPSFpyUlc5clNXVjVlbWhzVEhveFltcGhUMFl3WWs5dFRUSkNORlpPS3lzMlpuRktSMjR6WlRkVFdDdHNSVWRCVkVGUFNWQkZOVkUxVVdaek5rSktkekIwZVZoME4wNUVlR1Y0ZWtkdWRXRkNaalJVV2xnMVZHSkRUMnhwYkhSMFFVbEpSVGwyTjFoeloxWjBkSFIxZG5OQlNuSkVZbHBSVmpCV0syOHdjelV5TVdGMmMwTlZjRzVIVlVGWlNFWlpPV1ZZZEM5NVl6aEVVVEpoUVdaamJHb3dkWFZTYlROQ1NHZHZhVTFNWWtZNWNVdHdLMk5XZDB3M2FuZ3JRbW8yZFZSbFV6RkdSWGg0Vm5GaGJucDZPRmhITTFkQ2FuWnVZM05ITjFseU9FRlNlVTloUWsxRGFXTk9hV3hsUjJZMlF6WlBSSGRtTUc1amVsWTRaMVV5ZFRWaGJGWmhWbk5rZVVvcmRFTllRV3BXUkZSVVJEaEtZaklyUW1GRmIyaHZaME5HZDNveFNHOXRMMHRPYm5kWVpIcExUbGRKUlhkWmMxQmFOR1ZGYVRSdVkzWTVXWHBMVFd0TWNuWlVObkJXV1doV1JFbFhNamQ1VVdsdGJtaHRjelZ5TVZjMWIyVlNkMjV3YVhZMEsxZEdSRE5YU1RJMmVXTlpTRzFHUW5GME1VTmFURWRLTlRKNGJIRXhMMmMxU2xWUlpVZzFSelZhTmtaMVdtcFZibTF3UmpKbGFVUnRlVGR4TW1GdllrZDZVVWRyY2xnMU9XOW5iM0JZZFVsbE1EQnFLMVZhZGtVclNFSXJaM2xQVGtKQlVYbzFhSGxqT1VsMVRXeE5OMFZIYTNWUE9XRm1lbTFpWVRJNGVFWmFWMkZ2Wm5odGVHTlRTRFJKZW5sclFVSmhPRUpxZWpGd1dVcHVaRkUxYm1OMlVsTjVZWEozYm5aSFIwWjVjbUZCWXpKdlEwMXJSelV2UlVGcFVYaHVXQ3MwUlVWWk5rRjBRa2d5U2tKellXRm1aVTlRY2pWUVVYcHdlVFJSVGt4aU4zQjBWSEZ5Wm5CVldtMU1jRUpsU0dsUFpUWkhSVXRFUzFoSWQwNHpRV1pRTVdocll6ZFVlVTFtVWxKVVZIaDVhQzlhVTNZemN6QlRXVzV1VEdWRU1HOUpRakpRY3poRlNqRlpkamhaWldWMVFsQjBXbTFXUjNoblFreG5kVVV3VTJFeldIVTRUbllyV1RadWJ6ZzVlVE0xVkVrMFpXeExkMjFRUjNaSlozVmxZM2xVVjFoNEt6TjBUR3hoWkVwMVdVSXJiMU52YWl0SmFscGFjVGw1TW5OVU4wSXJUa2RWTW1Wa1NYRXlXRXBRU2xvclEwcHFVRzU1VldsblQyRXZUazh3TlVsNlRHTnpTVFpOZURremEzTjZZbTh2TlRRcmNpdDNZa3hDUzBjdlprNVhSQzk2TVZoQ1JWUlNNU3RoY2xONVQwc3JWVzFxZEVNMk5ITjFNbUl5ZDI1YVkwOUdXV2RWV2l0VFIycDZiVEZ6ZWtrMmRuaHFhRTR4VTNwRmFrMHpLM2R0THlzdldDc3JPVUZVVVc1d1ptSnhkbE5OVnk5M1REazFMMlJhTlU4d2RsUmxUbWhIUWpWNmRYcE1iMHhGV1RadUt5OVhjbXhaVUcxck5UWlZNM053WW10cGRVTmtiSFkwVkM5b09VcEZkU3RxWmtkVFRsQjZOSGh4Y0VSdldHZ3laV1ZzTURSclVEVkVhVTQxVlRaM1kyMWplazlUTTFkSE5sTnpUelpaYURGVU5ESm1SWFpqTWtaeWRWRjZaSGxTYWtwR1NucEtVSHBOVHpjNU1YRjBTMnhrZW1ZNFNUaGFOa3czUTJaaE5XdHNURVV6TUM5cGNqRnJNMFpuU0ZKMlJGZFBielJ4Tmk5VFdqTm1RMEprU0ZjeWFYa3ZNVEZVU0ZoUGVXdzNURGcyZFZNdmJrcG9ZbkZUUkRObFoxZzFUbUZuY21STFIzaDNVa3N2YmpGSWJGSm9VVTh4ZEZJeE0zVXphVzQwVEc5MFlpdHdObWxOVDB0TmFscHFhMk4zWTJSNGRqQldabUZIWVdJd2FGaDFlRUZYYzAxdk1raDJObVZzVDNnemFYQTFTVEZDVEhvMFVrTjJia1Z5UzA5ME1XUkNWUzlUWmxOSWRUVTVSVWxhTlc5R1pFZGtTREpSTWxjemNEQk9aek5VTjB0S2FYUnVOVVkyTW1wU1ExRmFTa1V2T1ZocllqVTFRMG8zVTBSbldGbHNaalpDYUV3M01WSldSa2hRVTBVclZFWXhiMHBvT1V4NVV5dE9ObFl3TjNaUlNtWnZaMDV3V201SVR6UnpVa053VjNaamQzRjNhVVV2YmtjNVpUbEljbk5JV0VNMFNHMTNNMFZ6V2tWU2FUUmtTRFZyZGtGd05URllkelpsYTFGSUswcHhRakpIVkVkUVZqRk5XVGRFYW5rclZIcHdjWFpwWXpGQ1NEZGpPVUpEV0VvNFVrcEhWelpUVVRRMlZUVXhSVEZUSzI1RE5YbDNUUzlOUTFORVZUUjBLMnhCV2tGSk9EZzNUR2MyU1d0cWRrdEVVMHBtUkc5U05IaFlkWGN6Y0ROTlJWQkJVVmRWVUhaNFR5OWlibXBUWlZsQ2NsbFFNMEp2T0ZsNU5tdHBlazFXUVRjd1dHZHhUVzFsYkhseU9FNWFZM0pPS3pWb05saHVkMDVCTjNnNWFqWlZSa1V2UjJWRlZWSktNVEZyS3pkUFRtbEJaalZCZEZsbGVIbDFMMXBDZWxOUFNqUnRLM0pUVnpWMFZIcE5VWFpTVFRoRFdHRXZNV3B1UzNBM2QwRm9kbkJzY1RoS05WbFpMMVkyYUdWdVdtVnBWMDlHUms1MlMxQlNUV1ZxYTBKSlNVRmpPRFpaVVM4d2FVVnJWVWhDYW1keVRFeHFibWgyVEdVd05tOVZUekZhWWs5Q2EwMUZkMGxKYUZWbk1VSlpaM3BUWlZZNU9XSmlOakFyUkRWTGNHWkdiMmswVG5NellpOWtTa0pLY0Vwa1dIQnlkWHAzYzJoaWRVaEpLeTlMT0cxMWNpdEZjVGcwYzJwSlduVnVaRE5uWlhoM1VTdDRUMGRXYTNkS1ZFWlZSVmx2ZHpKVGJrZHhTVlF6YmtWSWFtTkdXVWRDTTFJMWJXaEVka1pJYW5OSWVEUTRaR0pGUlU1UFQyNXlORTVIV25keFVYcFVZa3BGTTJGbFJURm5NSFV6VDJWcmRsUjJVekp2WWt4RGEwSndhbUZrVmpRd2NHRTNWelpVTkV0MGVXZ3hNMFptZURScmVGUk9NbU5zWlVSNGJtVjNkelpHWlZGRVUzaGhWMkUzVDBsWmRIUTNia2R6TVhSMVVXeEthRGwzVUhSSk9IUXpUbWx0UjNKU1NVZGxTWEZ2UWtWNVdTOXBhR1ZMYWtsQk9IaEdjRVZEV0hsYWFra3hNa05JYTBseldrUldUWHAyWTBGc1FURlBNblJaWWpVMlpYVlJSMVYzWWxwek1IUlhVMmhxTVZZdlp6STJaMWh4VTB0S09YSm5iR292ZUdSYU1GVnFUVzFwV1VoUFNFbDRUbkJGWmxNelJIVm9OVlpOVEhKd0wyNTNiVU5VVWtkNWFWRkdSMjVtTmxKbWIwOXFTbGN2UmtjclkxSnJaemhvUkdkemJ6ZFZiVWQxVTA5d2Iyb3plVkY2Y1c0MGJrNXNVakZYUVhsNk5tMVRWRFpZY21SRGEwVTNRVTFxZFc1dk9UWkpOMGRUYURKa1JIWm5ZMkpPUlZsdGJrbzFhRWxrYW5wb2NrSnRVVUl6YzJ0eEwwWmtWazFRTUVVMFNUVTVObFJRZUZsUFQxTk9ibTk0Vm5wRVRHaGFhSGhHTWk5YU5YY3lVbEpqYkV0dlJrVlZVRVphVmtkamJsaEhWVlZvTjJkWGVsRlVka3MwZGxnelJuSnlhMEZ0UkcxQ2JGVkRlRk5ETDNSWlpEVXpMMkp5YVRsUlVuSnhWa1ZhTHpBM2JTOTZNVU42YkRCM1IyTTRaRTVzVUdZNVdDOVFjRXAxVEVvd1VrMUNkRFZzY2xBeVJVOWhkbTlhY0RsdGIyc3pXSFZXUlRNdk5HcDBjM2NyU1dkTFVDdHdNVzVCWmxKV1MzUlNka1ptZDNSYVZVWXZTek4zVVZKQk1ISjBTRk4yZEN0MVZraGxlRzlzTkdkRWExTTJaRTQ0V0VaNVJuUTRWREZ1UWxoVmFGSm9ZbmRuVEc0d1EwWkdkRmRqT1VOVVpFVktTMnBJZWxSUldXOTVkbmg1UTJKWlJ6TlRkVVU1UjA5WmVsTnJNbGxYWlRoTmRHMVJUMHczWjJOV1dUVnlNekJMYkZoRFVUQnRWRWxxU0hJeWQyRXZOVkpUYjBvemRpODVSbFZhUkdWdmEyUm9UMWwyUjBaRE5qaHNkell5T0ZneVlWTlpRMnhFTWpoMVpGZE9URmR2WTJKQ05GUTJkVlY0ZGtJclNtUmtWbFpaU2s5YWRYVkVPVkJNZVhkc1RUUm9kMXBXYlVNdmQycDVOMkp1VEdsUFpqSjRWMkZ6VGpWamFVdFFRbGxaWkRFMVp5dHRURTR3V0habFRUSkVlSHBGUmxvcmJHUnFiWEk0TjFwTFozbzBiWFZOUkZNdlRUUnJjWEJGVmpSQ2VESndXVkJSVm5wb1RsTlBjRUo0VjJGS0x6aFJRMDR3ZDBwR1pUZE5hRVV2VVdKRU9TOTVSVmQwVkVGQ1ExRnpTVk5PYUVob2IwOXBUa1JpY0M4MWExQnJjVXRLUkVaMVkyZHFUVEJ1TVRCWU9HbHNkamRJU1hSQ1FubHJXVEl5YTFsUFRVb3JTVWR3VVdRcmMyd3hObmgzY1ZCcWIxSkxNSEE0ZEZWNWNIQkdNVk5VYm5nMGNIWldla1ZHUm05MWJsRm1MMnhhYjFSR2NISXZOa3RuTldNeGMyUlVVbkZpVm5KbVUySlVRMGMyV0dJdk1taGplbU5HY2xscmFHdFRUVTEwZFZsaGF6TlhSR05RVUdOWVpYZEpTbVZILl80WENPNXNfbUlyQUU2dEdTUHJuZEM5MGktT0VRcDRvdFRDcW83LXREaVdtSTRkaWV5elhGMU90SUlCbG5TY0NoeGVzTEVxZU4zVHd1dVR5RHBrNzNR"}


def login():
    r = requests.post(ip, params, headers=headers)
    return r


r = login()
# print(login.json())
